# Copyright (C) 2017 Project-EBDO
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


# Hyperswitch configuration for EBDO-FeatureService api:examples endpoints
# Author: Joseph Allemandou


swagger: '2.0'
info:
  version: '1.0.0-beta'
  title: EBDO FeatureService Examples API
  description: EBDO FeatureService Examples API
  termsofservice: TBD
  contact:
    name: EBDO-Project Team
    email: TBD
    url: TBD
  license:
    name: GNU General Public Licence, v3
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
paths:
  /:
    get:
      tags:
        - EBDO FeatureService Examples
      summary: List EBDO FeatureService API entry points
      description: |
        This is the root of the EBDO FeatureService Examples
      produces:
        - application/json
      responses:
        '200':
          description: The queriable sub-items
          schema:
            $ref: '#/definitions/listing'
        default:
          description: Error
          schema:
            $ref: '#/definitions/problem'
      x-monitor: false

  /mean-fake-timeserie/{from}/{to}/{step}:
    get:
      tags:
        - EBDO FeatureService Examples
      summary: Get a fake timeserie from v1
      description: |
        Get the mean of a fake timeserie which contains random [0, 1[ values in [from, to[ interval by step
      produces:
        - application/json
      parameters:
        - name: from
          in: path
          description: Starting date-time of the timeserie, inclusive. Expecting YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS formats.
          type: string
          required: true
        - name: to
          in: path
          description: Ending date-time of the timeserie, exclusive. Expecting YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS formats.
          type: string
          required: true
        - name: step
          in: path
          description: The step in time unit for generated random data. Can be second, minute, hour or day.
          type: string
          enum: ['second', 'minute', 'hour', 'day']
          required: true
      responses:
        '200':
          description: The list of stating & ending timestamps, the number of values within the given range and the mean of these values.
          schema:
            $ref: '#/definitions/mean-timeserie'
        default:
          description: Error
          schema:
            $ref: '#/definitions/problem'
      x-request-handler:
        - get_from_backend:
            request:
              uri: /{domain}/sys/examples/mean-timeserie/{from}/{to}/{step}
      x-monitor: false

  /fake-timeserie/{from}/{to}/{step}:
    get:
      tags:
        - EBDO FeatureService Examples
      summary: Get a fake timeserie
      description: |
        Get a fake timeserie with random [0, 1[ values in [from, to[ interval by step
      produces:
        - application/json
      parameters:
        - name: from
          in: path
          description: Starting date-time of the timeserie, inclusive. Expecting YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS formats.
          type: string
          required: true
        - name: to
          in: path
          description: Ending date-time of the timeserie, exclusive. Expecting YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS formats.
          type: string
          required: true
        - name: step
          in: path
          description: The step in time unit for generated random data. Can be second, minute, hour or day.
          type: string
          enum: ['second', 'minute', 'hour', 'day']
          required: true
      responses:
        '200':
          description: The list of timestamps and generated random values
          schema:
            $ref: '#/definitions/fake-timeserie'
        default:
          description: Error
          schema:
            $ref: '#/definitions/problem'
      x-request-handler:
        - get_from_backend:
            request:
              uri: /{domain}/sys/examples/fake-timeserie/{from}/{to}/{step}
      x-monitor: false

  /fake-post/{url_param}:
    post:
      tags:
        - EBDO FeatureService Examples
      summary: Fake post endpoint
      description: |
        Fake post endpoint returning the parameters given in url and in body,
        using url-value as key to the body-value.
      produces:
        - application/json
      parameters:
        - name: url_param
          in: path
          description: A fake url parameter
          type: string
          required: true
        - name: body_param
          in: formData
          description: A fake body parameter
          type: string
          required: true
      responses:
        '200':
          description: The parameters provided
          schema:
            $ref: '#/definitions/post-parameters'
        default:
          description: Error
          schema:
            $ref: '#/definitions/problem'
      x-request-handler:
        - post_to_backend:
            request:
              method: post
              uri: /{domain}/sys/examples/fake-post/{url_param}
              headers:
                content-type: multipart/form-data
              body:
                body_param: '{{body_param}}'
      x-monitor: false

  /fake-chain:
    post:
      tags:
        - EBDO FeatureService Examples
      summary: Fake-chain endpoint using post
      description: |
        Fake chain using fake-post two times is a row
      produces:
        - application/json
      parameters:
        - name: chain_body_param
          in: formData
          description: A fake body parameter for validity
          type: string
          required: true
      responses:
        '200':
          description: The parameters provided
          schema:
            $ref: '#/definitions/post-parameters'
        default:
          description: Error
          schema:
            $ref: '#/definitions/problem'
      x-request-handler:
        # First step - Dummy call to fake-post
        - validate_first_step:
            request:
              method: post
              uri: /{domain}/sys/examples/fake-post/fake-chain-1
              headers:
                content-type: multipart/form-data
              body:
                body_param: '{{chain_body_param}}'

        - execute_second_step:
            request:
              method: post
              uri: /{domain}/sys/examples/fake-post/fake-chain-2
              headers:
                content-type: multipart/form-data
              body:
                body_param: value-fake-chain-2

        - return_step:
            return:
              status: 200
              headers: '{{execute_second_step.headers}}'
              body: '{{execute_second_step.body}}'

      x-monitor: false





definitions:
  # A https://tools.ietf.org/html/draft-nottingham-http-problem
  problem:
    required:
      - type
    properties:
      type:
        type: string
      title:
        type: string
      detail:
        type: string
      instance:
        type: string

  listing:
    description: The result format for listings
    required:
      - items
    properties:
      items:
        type: array
        items:
          type: string

  fake-timeserie:
    properties:
      items:
        type: array
        items:
          properties:
            ts:
              type : string
            val:
              type: number
              format: double

  mean-timeserie:
    properties:
      items:
        type: array
        items:
          properties:
            startts:
              type : string
            endts:
              type : string
            mean:
              type: number
              format: double

  post-parameters:
    properties:
      url_parameter:
        type: string
      body_parameter:
        type: string
